select
/* Query to extract ED data for Orygen (contact Hannah Richards).
** To replace extract provided from EDIS
SERVICE REQUEST 774176
*/
	ENC_ID = enc.encntr_id
	, URNo = ea_URN.alias
;	, Active_Status = uar_get_code_display(enc.active_status_cd)
	, AGE_AT_PRESENTATION = floor(datetimediff(enc.arrive_dt_tm, P.BIRTH_DT_TM, 9))
	, GENDER = uar_get_code_display(p.sex_cd)
	, POSTCODE = pcode.Postcode
	, CAMPUS = uar_get_code_display(enc.loc_facility_cd)
	, ARRIVAL_TIME = enc.arrive_dt_tm "@SHORTDATETIME"
;	, REG_TIME = enc.reg_dt_tm "@SHORTDATETIME"
	, ARRIVAL_MODE = uar_get_code_display(enc.admit_mode_cd)
	, TRIAGE_CAT = triage_cat.result_val
	, SYMPTOM = enc.reason_for_visit ;VISIT COMPLAINT from Triage powerform
	, TRIAGE_DESC = triage_desc.result_val
	, TRIAGE_TEXT = triage_txt.triage_text
	, ED_DIAGNOSIS_DESC = d.diagnosis
	, ED_DIAG_ICD10 = d.icd10
;	, IP_DISCH_DISP = uar_get_code_display(enc.disch_disposition_cd)
	, ED_DISCH_DISP = uar_get_code_display(c_out.checkout_disposition_cd)
;	, TRIAGE_DATE_TIME = enc.triage_dt_tm  "@SHORTDATETIME"
	, Dr_SEEN_TIME = dr_seen.start_time "@SHORTDATETIME"
	, IP_BED_REQ_TIME = ip_bed_req.IP_req_time "@SHORTDATETIME"
	, IP_ADMIT_TIME = enc.inpatient_admit_dt_tm "@SHORTDATETIME"
	, ED_DEPART_TIME = if(enc.inpatient_admit_dt_tm != null) format(enc.inpatient_admit_dt_tm, "dd/mm/yyyy hh:mm:ss")
		else format(enc.depart_dt_tm, "dd/mm/yyyy hh:mm:ss") endif
	, INJURY_PLACE = injury_place.result_val
	, INJURY_INTENT = injury_intent.result_val
	, INJURY_ACTIVITY = injury_activity.result_val
	, INJURY_DESCRIPTION = injury_desc.result_val
	, INJURY_CAUSE = injury_cause.result_val


from encounter enc

	/**********
	** Need to get only those encounters with an ED arrival event within the required time period.
	** Because of encounter merges, can't rely on enc.arrival_dt_tm because if the inpatient encounter
	** becomes the major encounter, it will use the admit DT as the arrival DT which is incorrect
	**********/
	, (inner join(
		select
			ti.encntr_id
			, tke.display_key
			, arrived_dt = min(tkge.complete_dt_tm)
		from tracking_item ti
		;only look at ARRIVE tracking events that are completed
		, (inner join tracking_event tkge on tkge.tracking_id = ti.tracking_id
			and tkge.active_ind = 1
			and tkge.event_status_cd in (10525 /*complete*/))
		, (inner join track_event tke on tke.track_event_id = tkge.track_event_id
			and tke.active_ind = 1
			and tke.event_use_mean_cd = 2724 /*Arrive Event*/

			;this looks at only those arrival events that were attributable to ED
			and tke.tracking_group_cd in (151886115 /*ED FH*/, 151974417 /*ED SH*/, 151886117 /*ED WTN*/)
			and tke.display_key = "ARRIVE")

		where ti.active_ind = 1

		;need to group by display key to make sure it's the min of that specific display key
		group by ti.encntr_id, tke.display_key

		with SQLTYPE("F8","vc50","DQ8")

		) arrived on arrived.encntr_id = enc.encntr_id
		and arrived.arrived_dt >= cnvtdatetime("01-aug-2023 00:00:00") and arrived.arrived_dt < cnvtdatetime("01-nov-23 00:00:00")
;		and arrived.arrived_dt >= cnvtdatetime("01-jan-2024 00:00:00")
	)


	/**********
	** get the currently active URN for the patient
	**********/

	, (left join encntr_alias ea_URN on ea_URN.encntr_id = enc.encntr_id
		and ea_URN.encntr_alias_type_cd = 1079	; 'URN' from code set 319
		and ea_URN.active_ind = 1	; active URNs only
		and ea_URN.end_effective_dt_tm > sysdate	; effective URNs only
	)
	, (left join person p on p.person_id = enc.person_id)


	/**********
	** get ONE postcode from the active addresses based on most recent
	** begin effective DT TM and most recently updated DT TM
	***********/

	, (left join(
		select
			person_id = ad.parent_entity_id
			, Postcode = ad.zipcode
			, row_no = row_number() over (partition by ad.parent_entity_id order by ad.beg_effective_dt_tm desc, ad.updt_dt_tm
			desc)
		from address ad
		where ad.address_type_cd = 756 /*home*/
			and ad.active_ind = 1
			and ad.end_effective_dt_tm > sysdate
			and ad.zipcode != null
			and ad.active_status_cd = 188 /*active*/
			and ad.parent_entity_name = "PERSON"
		) pcode on pcode.person_id = p.person_id and pcode.row_no = 1
	)


	/**********
	** get the earliest DR SEEN tracking event start (onset) time where
	** the event was either "started" or "completed" (excludes "requested")
	**********/

	, (left join(
		select
			ti.encntr_id
			, tke.display_key
			, start_time = min(tkge.onset_dt_tm)
		from tracking_item ti
		;only look at DR SEEN tracking events that are started or completed
		, (inner join tracking_event tkge on tkge.tracking_id = ti.tracking_id
			and tkge.active_ind = 1
			and tkge.event_status_cd in (79850081 /*start*/, 10525 /*complete*/))
		, (inner join track_event tke on tke.track_event_id = tkge.track_event_id
			and tke.active_ind = 1
			and tke.event_use_mean_cd = 2729 /*Doctor See Event*/
			and tke.display_key = "DRSEEN")

		where ti.active_ind = 1

		group by ti.encntr_id, tke.display_key

		with SQLTYPE("F8","VC50","DQ8")

		) dr_seen on dr_seen.encntr_id = enc.encntr_id
	)


	/**********
	** get the earliest IP Bed Request tracking event start (onset) time where
	** the event was either started or completed (excludes "requested")
	**********/

	, (left join(
		select
			ti.encntr_id
			, tke.display_key
			, IP_req_time = min(tkge.requested_dt_tm)
		from tracking_item ti
		/*	look at all IP Bed Request tracking events that were requested regardless of whether they
			had an onset (start) or complete (end) time */
		, (inner join tracking_event tkge on tkge.tracking_id = ti.tracking_id
			and tkge.active_ind = 1
			and tkge.event_status_cd = 10524 /*cancelled*/)
		, (inner join track_event tke on tke.track_event_id = tkge.track_event_id
			and tke.active_ind = 1
			and tke.event_use_mean_cd = 119688380 /*Inpatient Bed Request Event*/
			and tke.display_key = "INPTBEDREQUEST")

		where ti.active_ind = 1

		group by ti.encntr_id, tke.display_key

		with SQLTYPE("F8","VC50","DQ8")

		) ip_bed_req on ip_bed_req.encntr_id = enc.encntr_id
	)

	/**********
	** Get the triage category from clinical events table.  Could be possible that there are multiple 'active' rows
	** hence need to do a row_number() over encounter ID and sorted most recent to earliest and only return 1st one
	**********/
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 3346954 ; tracking acuity (triage category)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) triage_cat on triage_cat.encntr_id = enc.encntr_id and triage_cat.row_no = 1
	)


	/**********
	** Triage Description
	**********/

	, (left join(
		select
			ce.encntr_id
			;use row_number to ensure only one row returned because the description can be updated
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 86316017 ; Chief Complaint (triage description)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) triage_desc on triage_desc.encntr_id = enc.encntr_id and triage_desc.row_no = 1
	)

	/**********
	** Injury Surveillance powerform entries
	**********/

	/* place where injury occurred */
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 79848592 ; Place where injury occurred (injury surveillance)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) injury_place on injury_place.encntr_id = enc.encntr_id and injury_place.row_no = 1
	)

	/* Injury Intent */
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 79848905 ; Injury intent (injury surveillance)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) injury_intent on injury_intent.encntr_id = enc.encntr_id and injury_intent.row_no = 1
	)

	/* Injury Activity */
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 79848891 ; Acitivity when injury occurred (injury surveillance)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) injury_activity on injury_activity.encntr_id = enc.encntr_id and injury_activity.row_no = 1
	)

	/* Injury Description */
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 79848725 ; Description of injury (injury surveillance)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) injury_desc on injury_desc.encntr_id = enc.encntr_id and injury_desc.row_no = 1
	)

	/* Injury Cause */
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 79849268 ; Cause of injury (injury surveillance)
			and ce.result_val != NULL

		with SQLTYPE("f8", "i2", "VC50")
		) injury_cause on injury_cause.encntr_id = enc.encntr_id and injury_cause.row_no = 1
	)


	/**********
	/* Individual obs and other data entry from Triage form concatenated into one field
	**********/

	, (left join(
		select distinct
			obs.encntr_id
			, triage_text = listagg(trim(obs.concat_val), ",") over (partition by obs.encntr_id)
		from (
			/*	get each individual observation (event code) result and concatenate it with an abbreviated prefix and only
				return the most recent of those based on most recent valid_from and performed date where valid_to is greater than
				current system date */
			(select
				ce.encntr_id
				, row_no = row_number() over (partition by ce.encntr_id, ce.event_cd order by ce.valid_from_dt_tm desc, ce.performed_dt_tm desc)
				, ce.result_val
				, concat_val = concat(EVALUATE(ce.event_cd
					, 86233833, "AVPU:"
					, 75705789, "Temp:"
					, 703540, "RR:"
					, 88204044, "HR:"
					, 3623994, "SpO2:"
					, 703960, "O2 Delivery:"
					, 703569, "O2 Flow Rate:"
					, 152433903, "BOC Score:"
					, 86709587, "Pain Score:"
					, 703501, "BP Sys:"
					, 703516, "BP Dia:"
					, 26785627, "BSL:"
					, 26785563, "Keytones:"
					, 7334438, "Weight:"
					, 86163322, "GCS Eyes Open:"
					, 86163348, "GCS Voice:"
					, 86163333, "GCS Motor:"
					, 703608, "Cap Refill:"
					, 703565, "GCS Score:"
					, "Unknown"),ce.result_val)

			from clinical_event ce
			where ce.valid_until_dt_tm > sysdate
				; list all the individual discrete data entry fields in the Triage powerform
				and ce.event_cd in (
					86233833 ;AVPU
					,75705789 ;Temp
					,703540 ;RR
					,88204044 ;HR
					,3623994 ;SpO2
					,703960 ;O2 delivery
					,703569 ;O2 flow rate
					,152433903 ;BOC Score
					,86709587 ;Pain score
					,703501 ;BP Sys
					,703516 ;BP Dia
					,26785627 ;BSL
					,26785563 ;Keytones
					,7334438 ;Weight
					,86163322 ;GCS eyes open
					,86163348 ;GCS voice
					,86163333 ;GCS motor
					,703608 ;Cap refill
					,703565) ;GCS score
				;and ce.encntr_id = 51526139 ;for testing

			order by ce.event_title_text asc ;collation sequence hasn't been set to sort these in correct input order

			with SQLTYPE("f8", "i2", "vc50", "vc255")
			) obs)

		where obs.row_no = 1
		;order by 0 ;had to remove this for nested select in main query
		with SQLTYPE("f8","vc512")
		) triage_txt on triage_txt.encntr_id = enc.encntr_id
	)


	/***********
	** get the primary (principal) diagnosis that was entered under emergency medicine
	** still don't know how to get the ICD10 code
	***********/

	, (left join(
		select
			encntr = d.encntr_id
			, diagnosis = d.diagnosis_display
			, ICD10 = ccm.source_identifier
			, row_num = row_number() over (partition by d.encntr_id order by d.beg_effective_dt_tm asc)
		from diagnosis d
			,(inner join nomenclature nom on nom.nomenclature_id = d.nomenclature_id)
			,(left join cmt_cross_map ccm on ccm.concept_cki = nom.concept_cki)

		where d.diag_type_cd = 3538766 ;Principal Dx
			and d.ranking_cd = 3310 ;Primary
			and d.active_ind = 1
			and nom.vocab_axis_cd = 10425 ;diagnosis
			and nom.source_vocabulary_cd = 79828951 ;ICD10-AMVEMD
			and ccm.source_vocabulary_cd = 9353305 ;ICD10-AM No Dots
;			and d.encntr_id = 53755950

		with SQLTYPE("f8","VC255","vc20","i2")
		) d on d.encntr = enc.encntr_id and d.row_num = 1
	)


	/***********
	** get the discharge disposition from the checkin table.  Possible to have multiple if data errors
	** exist, so need to get row_number() to get the first one
	***********/

	, (left join
		(
			select
				co.encntr_id
				, co.checkout_disposition_cd
			from
			(
				(select
					ti.encntr_id
					, row_num = row_number() over (partition by ti.encntr_id order by tci.checkin_dt_tm asc)
					, tci.checkout_disposition_cd
				from tracking_checkin tci
					, (inner join tracking_item ti on ti.tracking_id = tci.tracking_id)
				where ti.active_ind = 1
					and tci.active_ind = 1
					and tci.tracking_group_cd in (151886115 /*ED FH*/, 151974417 /*ED SH*/, 151886117 /*ED WTN*/)
;					and ti.encntr_id = 53762881
;				order by ti.encntr_id asc, tci.checkin_dt_tm asc

				with SQLTYPE("F8", "i2", "f8")
				) co
			)

			where co.row_num = 1
			with SQLTYPE("f8", "f8")
		) c_out on c_out.encntr_id = enc.encntr_id
	)


	where enc.active_ind = 1
;	and enc.encntr_id = 53762881
;		and enc.encntr_id in (54105786,54509535,54293214)


with	time = 300
